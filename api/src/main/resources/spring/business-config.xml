<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <context:component-scan base-package="pl.mysan.roman.app.core.repositories.impl"/>

    <!--<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">-->
        <!--<property name="username" value="admin"/>-->
        <!--<property name="password" value="admin"/>-->
        <!--&lt;!&ndash;<property name="url" value="jdbc:h2:~/test;MVCC=TRUE;DB_CLOSE_ON_EXIT=TRUE;FILE_LOCK=NO"/>&ndash;&gt;-->
        <!--<property name="url" value="jdbc:postgresql://localhost:5432/rent-office"/>-->
        <!--<property name="driverClassName" value="org.postgresql.Driver"/>-->
    <!--</bean>-->

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="jdbc:postgresql://localhost:5432/rent-office" />
        <property name="username" value="test" />
        <property name="password" value="test" />
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="jpaProperties">
            <!--<map>-->
                <!--<entry key="hibernate.dialect" value="org.hibernate.dialect.PostgreSQL9Dialect"/>-->
                <!--<entry key="hibernate.hbm2ddl.auto" value="update"/>-->
                <!--<entry key="hibernate.show_sql" value="true"/>-->
            <!--</map>-->
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL9Dialect</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true/</prop>
                <prop key="hibernate.hbm2ddl.import_files">src/main/resources/data/sample.sql</prop>
            </props>
        </property>
        <property name="packagesToScan" value="pl.mysan.roman.app.core.models.entities"/>
    </bean>

    <jdbc:initialize-database data-source="dataSource">
        <jdbc:script location="classpath:data/sample.sql" encoding="UTF-8" />
    </jdbc:initialize-database>

    <tx:annotation-driven/>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"/>

    <context:component-scan base-package="pl.mysan.roman.app.core.services.impl"/>
    <context:component-scan base-package="pl.mysan.roman.app.core.asm.impl"/>
    <context:component-scan base-package="pl.mysan.roman.app.core.security"/>
</beans>